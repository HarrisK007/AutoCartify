{"ast":null,"code":"var _jsxFileName = \"/home/harris/autocartify_react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null); // Store the chart instance\n\n  useEffect(() => {\n    const ctx = chartRef.current.getContext('2d');\n    if (chartInstance.current) {\n      chartInstance.current.destroy(); // Destroy the existing chart\n    }\n    if (ctx) {\n      chartInstance.current = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: ['Day 1', 'Day 5', 'Day 10', 'Day 15', 'Day 20', 'Day 25', 'Day 30'],\n          datasets: [{\n            label: 'Sales',\n            data: [12, 19, 3, 5, 2, 3, 20],\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          },\n          plugins: {\n            tooltip: {\n              enabled: true\n            }\n          },\n          onClick: (event, elements) => {\n            if (elements.length > 0) {\n              const index = elements[0].index;\n              const label = chartInstance.current.data.labels[index];\n              const value = chartInstance.current.data.datasets[0].data[index];\n              alert(`Clicked on ${label}: ${value}`);\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      // Cleanup function\n      if (chartInstance.current) {\n        chartInstance.current.destroy(); // Destroy the chart when unmounting or re-rendering\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card shadow-sm border-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-chart-line me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 52\n            }, this), \" Sales (Last 30 Days)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: chartRef,\n            width: \"400\",\n            height: \"200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","Dashboard","_s","chartRef","chartInstance","ctx","current","getContext","destroy","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","plugins","tooltip","enabled","onClick","event","elements","length","index","value","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","_c","$RefreshReg$"],"sources":["/home/harris/autocartify_react/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst Dashboard = () => {\n    const chartRef = useRef(null);\n    const chartInstance = useRef(null); // Store the chart instance\n\n    useEffect(() => {\n        const ctx = chartRef.current.getContext('2d');\n\n        if (chartInstance.current) {\n            chartInstance.current.destroy(); // Destroy the existing chart\n        }\n\n        if (ctx) {\n            chartInstance.current = new Chart(ctx, {\n                type: 'line',\n                data: {\n                    labels: ['Day 1', 'Day 5', 'Day 10', 'Day 15', 'Day 20', 'Day 25', 'Day 30'],\n                    datasets: [{\n                        label: 'Sales',\n                        data: [12, 19, 3, 5, 2, 3, 20],\n                        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                        borderColor: 'rgba(54, 162, 235, 1)',\n                        borderWidth: 1\n                    }]\n                },\n                options: {\n                    scales: {\n                        y: {\n                            beginAtZero: true\n                        }\n                    },\n                    plugins: {\n                        tooltip: {\n                            enabled: true\n                        }\n                    },\n                    onClick: (event, elements) => {\n                        if (elements.length > 0) {\n                            const index = elements[0].index;\n                            const label = chartInstance.current.data.labels[index];\n                            const value = chartInstance.current.data.datasets[0].data[index];\n                            alert(`Clicked on ${label}: ${value}`);\n                        }\n                    }\n                }\n            });\n        }\n\n        return () => { // Cleanup function\n            if (chartInstance.current) {\n                chartInstance.current.destroy(); // Destroy the chart when unmounting or re-rendering\n            }\n        };\n    }, []);\n\n    return (\n        <div className=\"row\">\n            {/* ... (your card components) ... */}\n            <div className=\"col-md-12 mt-4\">\n                <div className=\"card shadow-sm border-0\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\"><i className=\"fas fa-chart-line me-2\"></i> Sales (Last 30 Days)</h5>\n                        <canvas ref={chartRef} width=\"400\" height=\"200\"></canvas>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}